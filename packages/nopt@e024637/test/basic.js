var nopt=require("../"),test=require("tap").test;test("passing a string results in a string",function(e){var o=nopt({key:String},{},["--key","myvalue"],0);e.same(o.key,"myvalue"),e.end()}),test("Empty String results in empty string, not true",function(e){var o=nopt({empty:String},{},["--empty"],0);e.same(o.empty,""),e.end()}),test("~ path is resolved to $HOME",function(e){var o=require("path");process.env.HOME||(process.env.HOME="/tmp");var n=nopt({key:o},{},["--key=~/val"],0);e.same(n.key,o.resolve(process.env.HOME,"val")),e.end()}),test("Unknown options are not parsed as numbers",function(e){var o=nopt({"parse-me":Number},null,["--leave-as-is=1.20","--parse-me=1.20"],0);e.equal(o["leave-as-is"],"1.20"),e.equal(o["parse-me"],1.2),e.end()}),test("Check types based on name of type",function(e){var o=nopt({"parse-me":{name:"Number"}},null,["--parse-me=1.20"],0);e.equal(o["parse-me"],1.2),e.end()}),test("Missing types are not parsed",function(e){var o=nopt({"parse-me":{}},null,["--parse-me=1.20"],0);e.equal(Object.keys(o).length,1),e.end()}),test("Types passed without a name are not parsed",function(e){var o=nopt({"parse-me":{}},{},["--parse-me=1.20"],0);e.equal(Object.keys(o).length,1),e.end()}),test("other tests",function(e){var o=(require("util"),require("stream")),n=require("path"),l=require("url"),r={s:["--loglevel","silent"],d:["--loglevel","info"],dd:["--loglevel","verbose"],ddd:["--loglevel","silly"],noreg:["--no-registry"],reg:["--registry"],"no-reg":["--no-registry"],silent:["--loglevel","silent"],verbose:["--loglevel","verbose"],h:["--usage"],H:["--usage"],"?":["--usage"],help:["--usage"],v:["--version"],f:["--force"],desc:["--description"],"no-desc":["--no-description"],local:["--no-global"],l:["--long"],p:["--parseable"],porcelain:["--parseable"],g:["--global"]},a={aoa:Array,nullstream:[null,o],date:Date,str:String,browser:String,cache:n,color:["always",Boolean],depth:Number,description:Boolean,dev:Boolean,editor:n,force:Boolean,global:Boolean,globalconfig:n,group:[String,Number],gzipbin:String,logfd:[Number,o],loglevel:["silent","win","error","warn","info","verbose","silly"],"long":Boolean,"node-version":[!1,String],npaturl:l,npat:Boolean,"onload-script":[!1,String],outfd:[Number,o],parseable:Boolean,pre:Boolean,prefix:n,proxy:l,"rebuild-bundle":Boolean,registry:l,searchopts:String,searchexclude:[null,String],shell:n,t:[Array,String],tag:String,tar:String,tmp:n,"unsafe-perm":Boolean,usage:Boolean,user:String,username:String,userconfig:n,version:Boolean,viewer:n,_exit:Boolean,path:n};[["-v",{version:!0},[]],["---v",{version:!0},[]],["ls -s --no-reg connect -d",{loglevel:"info",registry:null},["ls","connect"]],["ls ---s foo",{loglevel:"silent"},["ls","foo"]],["ls --registry blargle",{},["ls"]],["--no-registry",{registry:null},[]],["--no-color true",{color:!1},[]],["--no-color false",{color:!0},[]],["--no-color",{color:!1},[]],["--color false",{color:!1},[]],["--color --logfd 7",{logfd:7,color:!0},[]],["--color=true",{color:!0},[]],["--logfd=10",{logfd:10},[]],["--tmp=/tmp -tar=gtar",{tmp:"/tmp",tar:"gtar"},[]],["--tmp=tmp -tar=gtar",{tmp:n.resolve(process.cwd(),"tmp"),tar:"gtar"},[]],["--logfd x",{},[]],["a -true -- -no-false",{"true":!0},["a","-no-false"]],["a -no-false",{"false":!1},["a"]],["a -no-no-true",{"true":!0},["a"]],["a -no-no-no-false",{"false":!1},["a"]],["---NO-no-No-no-no-no-nO-no-no-No-no-no-no-no-no-no-no-no-no-no-no-no-NO-NO-no-no-no-no-no-no-no-body-can-do-the-boogaloo-like-I-do",{"body-can-do-the-boogaloo-like-I-do":!1},[]],["we are -no-strangers-to-love --you-know=the-rules --and=so-do-i ---im-thinking-of=a-full-commitment --no-you-would-get-this-from-any-other-guy --no-gonna-give-you-up -no-gonna-let-you-down=true --no-no-gonna-run-around false --desert-you=false --make-you-cry false --no-tell-a-lie --no-no-and-hurt-you false",{"strangers-to-love":!1,"you-know":"the-rules",and:"so-do-i","you-would-get-this-from-any-other-guy":!1,"gonna-give-you-up":!1,"gonna-let-you-down":!1,"gonna-run-around":!1,"desert-you":!1,"make-you-cry":!1,"tell-a-lie":!1,"and-hurt-you":!1},["we","are"]],["-t one -t two -t three",{t:["one","two","three"]},[]],["-t one -t null -t three four five null",{t:["one","null","three"]},["four","five","null"]],["-t foo",{t:["foo"]},[]],["--no-t",{t:["false"]},[]],["-no-no-t",{t:["true"]},[]],["-aoa one -aoa null -aoa 100",{aoa:["one",null,"100"]},[]],["-str 100",{str:"100"},[]],["--color always",{color:"always"},[]],["--no-nullstream",{nullstream:null},[]],["--nullstream false",{nullstream:null},[]],["--notadate=2011-01-25",{notadate:"2011-01-25"},[]],["--date 2011-01-25",{date:new Date("2011-01-25")},[]],["-cl 1",{config:!0,length:1},[],{config:Boolean,length:Number,clear:Boolean},{c:"--config",l:"--length"}],["--acount bla",{acount:!0},["bla"],{account:Boolean,credentials:Boolean,options:String},{a:"--account",c:"--credentials",o:"--options"}],["--clear",{clear:!0},[],{clear:Boolean,con:Boolean,len:Boolean,exp:Boolean,add:Boolean,rep:Boolean},{c:"--con",l:"--len",e:"--exp",a:"--add",r:"--rep"}],["--file -",{file:"-"},[],{file:String},{}],["--file -",{file:!0},["-"],{file:Boolean},{}],["--path",{path:null},[]],["--path .",{path:process.cwd()},[]]].forEach(function(o){var n=o[0].split(/\s+/),l=o[1],t=o[2],s=nopt(o[3]||a,o[4]||r,n,0),i=s.argv;delete s.argv;for(var u in l){var g=JSON.stringify(l[u]),p=JSON.stringify(void 0===s[u]?null:s[u]);g&&"object"==typeof g?e.deepEqual(g,p):e.equal(g,p)}e.deepEqual(t,i.remain)}),e.end()});